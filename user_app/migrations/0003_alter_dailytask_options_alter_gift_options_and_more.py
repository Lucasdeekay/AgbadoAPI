# Generated by Django 5.1.1 on 2025-08-04 08:36

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('user_app', '0002_gift_usergift'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='dailytask',
            options={'ordering': ['-created_at'], 'verbose_name': 'Daily Task', 'verbose_name_plural': 'Daily Tasks'},
        ),
        migrations.AlterModelOptions(
            name='gift',
            options={'ordering': ['coin_amount'], 'verbose_name': 'Gift', 'verbose_name_plural': 'Gifts'},
        ),
        migrations.AlterModelOptions(
            name='leisureaccess',
            options={'verbose_name': 'Leisure Access', 'verbose_name_plural': 'Leisure Access'},
        ),
        migrations.AlterModelOptions(
            name='taskcompletion',
            options={'ordering': ['-completed_at'], 'verbose_name': 'Task Completion', 'verbose_name_plural': 'Task Completions'},
        ),
        migrations.AlterModelOptions(
            name='useractivity',
            options={'ordering': ['-created_at'], 'verbose_name': 'User Activity', 'verbose_name_plural': 'User Activities'},
        ),
        migrations.AlterModelOptions(
            name='usergift',
            options={'ordering': ['-date_won'], 'verbose_name': 'User Gift', 'verbose_name_plural': 'User Gifts'},
        ),
        migrations.AlterModelOptions(
            name='userreward',
            options={'verbose_name': 'User Reward', 'verbose_name_plural': 'User Rewards'},
        ),
        migrations.AddField(
            model_name='gift',
            name='description',
            field=models.TextField(blank=True, help_text='Detailed description of the gift', null=True),
        ),
        migrations.AddField(
            model_name='gift',
            name='is_active',
            field=models.BooleanField(default=True, help_text='Whether this gift is currently available'),
        ),
        migrations.AlterField(
            model_name='dailytask',
            name='description',
            field=models.TextField(help_text='Detailed task description'),
        ),
        migrations.AlterField(
            model_name='dailytask',
            name='is_active',
            field=models.BooleanField(default=True, help_text='Whether this task is currently available'),
        ),
        migrations.AlterField(
            model_name='dailytask',
            name='points',
            field=models.PositiveIntegerField(default=0, help_text='Points awarded for completing this task', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1000)]),
        ),
        migrations.AlterField(
            model_name='dailytask',
            name='task_type',
            field=models.CharField(choices=[('WatchVideo', 'Watch Video'), ('FollowSocialMedia', 'Follow Social Media')], help_text='Type of task', max_length=20),
        ),
        migrations.AlterField(
            model_name='dailytask',
            name='title',
            field=models.CharField(help_text='Task title', max_length=255),
        ),
        migrations.AlterField(
            model_name='dailytask',
            name='youtube_link',
            field=models.URLField(blank=True, help_text='YouTube video link for video tasks', null=True),
        ),
        migrations.AlterField(
            model_name='gift',
            name='coin_amount',
            field=models.PositiveIntegerField(help_text='Points required to claim this gift', validators=[django.core.validators.MinValueValidator(1)]),
        ),
        migrations.AlterField(
            model_name='gift',
            name='image',
            field=models.ImageField(help_text='Gift image', upload_to='gifts/'),
        ),
        migrations.AlterField(
            model_name='gift',
            name='name',
            field=models.CharField(help_text='Name of the gift', max_length=255),
        ),
        migrations.AlterField(
            model_name='leisureaccess',
            name='instagram_handle',
            field=models.CharField(help_text="User's Instagram handle", max_length=100),
        ),
        migrations.AlterField(
            model_name='leisureaccess',
            name='is_verified',
            field=models.BooleanField(default=False, help_text='Whether social media accounts are verified'),
        ),
        migrations.AlterField(
            model_name='leisureaccess',
            name='user',
            field=models.OneToOneField(help_text='User associated with this leisure access', on_delete=django.db.models.deletion.CASCADE, related_name='leisure_access', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='leisureaccess',
            name='verified_at',
            field=models.DateTimeField(blank=True, help_text='When verification was completed', null=True),
        ),
        migrations.AlterField(
            model_name='leisureaccess',
            name='youtube_channel',
            field=models.CharField(help_text="User's YouTube channel name", max_length=100),
        ),
        migrations.AlterField(
            model_name='taskcompletion',
            name='otp_verified',
            field=models.BooleanField(default=False, help_text='Whether OTP verification was completed'),
        ),
        migrations.AlterField(
            model_name='taskcompletion',
            name='task',
            field=models.ForeignKey(help_text='Task that was completed', on_delete=django.db.models.deletion.CASCADE, related_name='completions', to='user_app.dailytask'),
        ),
        migrations.AlterField(
            model_name='taskcompletion',
            name='user',
            field=models.ForeignKey(help_text='User who completed the task', on_delete=django.db.models.deletion.CASCADE, related_name='completed_tasks', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='useractivity',
            name='activity_type',
            field=models.CharField(choices=[('FollowInstagram', 'Follow Instagram'), ('FollowYouTube', 'Follow YouTube'), ('ServiceRequest', 'Service Request'), ('TaskCompletion', 'Task Completion'), ('ProfileUpdate', 'Profile Update'), ('KYCUpdate', 'KYC Update'), ('GiftClaimed', 'Gift Claimed')], help_text='Type of activity performed', max_length=20),
        ),
        migrations.AlterField(
            model_name='useractivity',
            name='description',
            field=models.TextField(blank=True, help_text='Additional details about the activity', null=True),
        ),
        migrations.AlterField(
            model_name='useractivity',
            name='user',
            field=models.ForeignKey(help_text='User who performed the activity', on_delete=django.db.models.deletion.CASCADE, related_name='activities', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='usergift',
            name='delivery_date',
            field=models.DateTimeField(blank=True, help_text='When the gift was delivered', null=True),
        ),
        migrations.AlterField(
            model_name='usergift',
            name='delivery_status',
            field=models.CharField(choices=[('Pending', 'Pending'), ('Shipped', 'Shipped'), ('Delivered', 'Delivered'), ('Cancelled', 'Cancelled')], default='Pending', help_text='Current delivery status', max_length=20),
        ),
        migrations.AlterField(
            model_name='usergift',
            name='gift',
            field=models.ForeignKey(help_text='Gift that was claimed', on_delete=django.db.models.deletion.CASCADE, related_name='winners', to='user_app.gift'),
        ),
        migrations.AlterField(
            model_name='usergift',
            name='user',
            field=models.ForeignKey(help_text='User who claimed the gift', on_delete=django.db.models.deletion.CASCADE, related_name='won_gifts', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='userreward',
            name='points',
            field=models.PositiveIntegerField(default=0, help_text='Current points balance', validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AlterField(
            model_name='userreward',
            name='redeemed',
            field=models.BooleanField(default=False, help_text='Whether points have been redeemed'),
        ),
        migrations.AlterField(
            model_name='userreward',
            name='redeemed_at',
            field=models.DateTimeField(blank=True, help_text='When points were redeemed', null=True),
        ),
        migrations.AlterField(
            model_name='userreward',
            name='user',
            field=models.OneToOneField(help_text='User associated with this reward account', on_delete=django.db.models.deletion.CASCADE, related_name='reward_account', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='taskcompletion',
            unique_together={('user', 'task')},
        ),
    ]

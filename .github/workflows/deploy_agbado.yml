# .github/workflows/deploy.yml
name: Deploy to PythonAnywhere (agbado)

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    # Uncomment below if you want to test with MySQL in GitHub Actions
    # services:
    #   mysql:
    #     image: mysql:8.0
    #     env:
    #       MYSQL_ROOT_PASSWORD: mysql
    #       MYSQL_DATABASE: test_db
    #     options: >-
    #       --health-cmd="mysqladmin ping"
    #       --health-interval=10s
    #       --health-timeout=5s
    #       --health-retries=3
    #     ports:
    #       - 3306:3306

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Create test .env file
      run: |
        echo "DEBUG=True" >> .env
        echo "SECRET_KEY=test-secret-key-for-github-actions" >> .env
        echo "DATABASE_ENGINE=django.db.backends.sqlite3" >> .env
        echo "DATABASE_NAME=:memory:" >> .env
    
    - name: Run tests
      run: |
        python manage.py test

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Deploy to PythonAnywhere
      run: |
        # Pull latest code on PythonAnywhere
        curl -X POST \
          -H "Authorization: Token ${{ secrets.PYTHONANYWHERE_API_TOKEN1 }}" \
          -d "command=cd /home/${{ secrets.PYTHONANYWHERE_USERNAME1 }}/${{ secrets.PROJECT_NAME1 }} && git pull origin main" \
          https://www.pythonanywhere.com/api/v0/user/${{ secrets.PYTHONANYWHERE_USERNAME1 }}/consoles/
        
        # Create/update .env file on PythonAnywhere
        curl -X POST \
          -H "Authorization: Token ${{ secrets.PYTHONANYWHERE_API_TOKEN1 }}" \
          -d "command=cd /home/${{ secrets.PYTHONANYWHERE_USERNAME1 }}/${{ secrets.PROJECT_NAME1 }} && cat > .env << 'EOF'
            DEBUG=${{ secrets.DEBUG1 }}
            SECRET_KEY=${{ secrets.SECRET_KEY1 }}
            DATABASE_NAME=${{ secrets.DATABASE_NAME1 }}
            DATABASE_USER=${{ secrets.DATABASE_USER1 }}
            DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD1 }}
            DATABASE_HOST=${{ secrets.DATABASE_HOST1 }}
            DATABASE_PORT=${{ secrets.DATABASE_PORT1 }}
            ALLOWED_HOSTS=${{ secrets.ALLOWED_HOSTS1 }}
            EOF" \
            https://www.pythonanywhere.com/api/v0/user/${{ secrets.PYTHONANYWHERE_USERNAME1 }}/consoles/
        
        # Install/update dependencies
        curl -X POST \
          -H "Authorization: Token ${{ secrets.PYTHONANYWHERE_API_TOKEN1 }}" \
          -d "command=cd /home/${{ secrets.PYTHONANYWHERE_USERNAME1 }}/${{ secrets.PROJECT_NAME1 }} && pip3.9 install --user -r requirements.txt" \
          https://www.pythonanywhere.com/api/v0/user/${{ secrets.PYTHONANYWHERE_USERNAME1 }}/consoles/
        
        # Run migrations
        curl -X POST \
          -H "Authorization: Token ${{ secrets.PYTHONANYWHERE_API_TOKEN1 }}" \
          -d "command=cd /home/${{ secrets.PYTHONANYWHERE_USERNAME1 }}/${{ secrets.PROJECT_NAME1 }} && python3.9 manage.py migrate" \
          https://www.pythonanywhere.com/api/v0/user/${{ secrets.PYTHONANYWHERE_USERNAME1 }}/consoles/
        
        # Collect static files
        curl -X POST \
          -H "Authorization: Token ${{ secrets.PYTHONANYWHERE_API_TOKEN1 }}" \
          -d "command=cd /home/${{ secrets.PYTHONANYWHERE_USERNAME1 }}/${{ secrets.PROJECT_NAME1 }} && python3.9 manage.py collectstatic --noinput" \
          https://www.pythonanywhere.com/api/v0/user/${{ secrets.PYTHONANYWHERE_USERNAME1 }}/consoles/
        
        # Restart web app
        curl -X POST \
          -H "Authorization: Token ${{ secrets.PYTHONANYWHERE_API_TOKEN1 }}" \
          https://www.pythonanywhere.com/api/v0/user/${{ secrets.PYTHONANYWHERE_USERNAME1 }}/webapps/${{ secrets.DOMAIN_NAME1 }}/reload/
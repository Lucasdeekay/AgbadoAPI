[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "agbado-api"
version = "1.2.0"
description = "A comprehensive Django REST API for the Agbado platform"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Agbado Development Team", email = "dev@agbado.com"}
]
maintainers = [
    {name = "Agbado Development Team", email = "dev@agbado.com"}
]
keywords = ["django", "rest", "api", "authentication", "wallet", "tasks", "rewards"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Framework :: Django",
    "Framework :: Django :: 5.1",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Internet :: WWW/HTTP :: WSGI :: Application",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.8"
dependencies = [
    "Django>=5.1.1",
    "djangorestframework>=3.15.2",
    "django-cors-headers>=4.6.0",
    "django-filter>=24.3",
    "python-decouple>=3.8",
    "cloudinary>=1.44.0",
    "django-cloudinary-storage>=0.3.0",
    "channels>=4.1.0",
    "channels-redis>=4.2.0",
    "social-auth-app-django>=5.4.2",
    "djangorestframework-simplejwt>=5.3.1",
    "twilio>=9.3.3",
    "webauthn>=2.5.2",
    "pillow>=11.2.1",
    "redis>=5.1.0",
    "requests>=2.32.3",
    "cryptography>=45.0.3",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.3",
    "pytest-django>=4.7.0",
    "pytest-cov>=4.1.0",
    "factory-boy>=3.3.0",
    "faker>=20.1.0",
    "black>=23.11.0",
    "flake8>=6.1.0",
    "isort>=5.12.0",
    "mypy>=1.7.1",
    "pylint>=3.0.3",
    "django-debug-toolbar>=4.2.0",
    "django-extensions>=3.2.3",
    "bandit>=1.7.5",
    "safety>=2.3.5",
    "django-silk>=5.0.4",
    "drf-spectacular>=0.26.5",
    "sentry-sdk>=1.38.0",
]

[project.urls]
Homepage = "https://github.com/agbado/agbado-api"
Documentation = "https://agbado-api.readthedocs.io/"
Repository = "https://github.com/agbado/agbado-api"
"Bug Tracker" = "https://github.com/agbado/agbado-api/issues"

[project.scripts]
agbado-api = "agbado.manage:main"

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["agbado", "auth_app", "user_app", "wallet_app", "service_app", "provider_app", "notification_app"]
known_django = ["django", "rest_framework"]
sections = ["FUTURE", "STDLIB", "DJANGO", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "django.*",
    "rest_framework.*",
    "channels.*",
    "cloudinary.*",
    "webauthn.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "agbado.settings"
python_files = ["tests.py", "test_*.py", "*_tests.py"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--tb=short",
]
testpaths = ["."]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["."]
omit = [
    "*/tests/*",
    "*/migrations/*",
    "*/venv/*",
    "*/env/*",
    "*/__pycache__/*",
    "manage.py",
    "*/settings/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.bandit]
exclude_dirs = ["tests", "test", "migrations"]
skips = ["B101", "B601"]

[tool.pylint.messages_control]
disable = [
    "C0114",  # missing-module-docstring
    "C0115",  # missing-class-docstring
    "C0116",  # missing-function-docstring
    "R0903",  # too-few-public-methods
    "R0913",  # too-many-arguments
    "W0621",  # redefined-outer-name
    "W0612",  # unused-variable
    "W0611",  # unused-import
]

[tool.pylint.format]
max-line-length = 88

[tool.pylint.basic]
good-names = ["i", "j", "k", "ex", "Run", "_", "id", "db"]

[tool.pylint.design]
max-args = 10
max-attributes = 10
max-bool-expr = 5
max-branches = 12
max-locals = 15
max-parents = 7
max-public-methods = 20
max-returns = 6
max-statements = 50 
# Generated by Django 5.1.1 on 2025-08-04 08:36

import datetime
import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('provider_app', '0006_alter_serviceprovider_options_and_more'),
        ('service_app', '0006_alter_service_image_alter_servicerequest_image_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='booking',
            options={'ordering': ['-created_at'], 'verbose_name': 'Booking', 'verbose_name_plural': 'Bookings'},
        ),
        migrations.AlterModelOptions(
            name='service',
            options={'ordering': ['-created_at'], 'verbose_name': 'Service', 'verbose_name_plural': 'Services'},
        ),
        migrations.AlterModelOptions(
            name='servicerequest',
            options={'ordering': ['-created_at'], 'verbose_name': 'Service Request', 'verbose_name_plural': 'Service Requests'},
        ),
        migrations.AlterModelOptions(
            name='servicerequestbid',
            options={'ordering': ['-created_at'], 'verbose_name': 'Service Request Bid', 'verbose_name_plural': 'Service Request Bids'},
        ),
        migrations.AlterModelOptions(
            name='subservice',
            options={'ordering': ['-created_at'], 'verbose_name': 'Sub Service', 'verbose_name_plural': 'Sub Services'},
        ),
        migrations.RemoveField(
            model_name='booking',
            name='price',
        ),
        migrations.RemoveField(
            model_name='booking',
            name='provider_status',
        ),
        migrations.RemoveField(
            model_name='booking',
            name='service_provider',
        ),
        migrations.RemoveField(
            model_name='booking',
            name='service_request',
        ),
        migrations.RemoveField(
            model_name='booking',
            name='user_status',
        ),
        migrations.RemoveField(
            model_name='servicerequestbid',
            name='message',
        ),
        migrations.RemoveField(
            model_name='servicerequestbid',
            name='price',
        ),
        migrations.RemoveField(
            model_name='servicerequestbid',
            name='service_provider',
        ),
        migrations.AddField(
            model_name='booking',
            name='amount',
            field=models.DecimalField(decimal_places=2, default=0, help_text='Agreed amount for the booking', max_digits=16, validators=[django.core.validators.MinValueValidator(0.01)]),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='booking',
            name='booking_date',
            field=models.DateField(default=datetime.datetime(2025, 8, 4, 8, 36, 13, 287113, tzinfo=datetime.timezone.utc), help_text='Date for the service booking'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='booking',
            name='notes',
            field=models.TextField(blank=True, help_text='Additional notes for the booking', null=True),
        ),
        migrations.AddField(
            model_name='booking',
            name='provider',
            field=models.ForeignKey(default=1, help_text='Service provider for the booking', on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='provider_app.serviceprovider'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='booking',
            name='service',
            field=models.ForeignKey(default=1, help_text='Service being booked', on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='service_app.service'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='booking',
            name='status',
            field=models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='pending', help_text='Current status of the booking', max_length=20),
        ),
        migrations.AddField(
            model_name='service',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, help_text='When the service was last updated'),
        ),
        migrations.AddField(
            model_name='servicerequestbid',
            name='amount',
            field=models.DecimalField(decimal_places=2, default=1, help_text='Bid amount offered by the provider', max_digits=16, validators=[django.core.validators.MinValueValidator(0.01)]),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='servicerequestbid',
            name='proposal',
            field=models.TextField(default='', help_text='Proposal message from the provider'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='servicerequestbid',
            name='provider',
            field=models.ForeignKey(default=1, help_text='Provider making the bid', on_delete=django.db.models.deletion.CASCADE, related_name='bids', to='provider_app.serviceprovider'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='servicerequestbid',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, help_text='When the bid was last updated'),
        ),
        migrations.AddField(
            model_name='subservice',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, help_text='When the sub-service was last updated'),
        ),
        migrations.AlterField(
            model_name='booking',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, help_text='When the booking was created'),
        ),
        migrations.AlterField(
            model_name='booking',
            name='feedback',
            field=models.TextField(blank=True, help_text='Feedback from the user or provider', null=True),
        ),
        migrations.AlterField(
            model_name='booking',
            name='rating',
            field=models.PositiveSmallIntegerField(blank=True, help_text='Rating given by the user (1-5)', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)]),
        ),
        migrations.AlterField(
            model_name='booking',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, help_text='When the booking was last updated'),
        ),
        migrations.AlterField(
            model_name='booking',
            name='user',
            field=models.ForeignKey(help_text='User who made the booking', on_delete=django.db.models.deletion.CASCADE, related_name='bookings_as_user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='service',
            name='category',
            field=models.CharField(choices=[('Electrical', 'Electrical'), ('Automobile', 'Automobile'), ('Carpentry', 'Carpentry'), ('Cleaning', 'Cleaning'), ('Plumbing', 'Plumbing'), ('Fumigation', 'Fumigation'), ('Legal', 'Legal'), ('Healthcare', 'Healthcare'), ('Fashion', 'Fashion'), ('Shopping', 'Shopping'), ('Construction', 'Construction'), ('Fitness', 'Fitness'), ('Engineering', 'Engineering'), ('Education', 'Education'), ('Others', 'Others')], help_text='Service category/type', max_length=100),
        ),
        migrations.AlterField(
            model_name='service',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, help_text='When the service was created'),
        ),
        migrations.AlterField(
            model_name='service',
            name='description',
            field=models.TextField(help_text='Detailed description of the service'),
        ),
        migrations.AlterField(
            model_name='service',
            name='image',
            field=models.URLField(blank=True, help_text='URL to an image representing the service', null=True),
        ),
        migrations.AlterField(
            model_name='service',
            name='is_active',
            field=models.BooleanField(default=True, help_text='Whether the service is currently active'),
        ),
        migrations.AlterField(
            model_name='service',
            name='max_price',
            field=models.DecimalField(decimal_places=2, help_text='Maximum price for the service', max_digits=16, validators=[django.core.validators.MinValueValidator(0.01)]),
        ),
        migrations.AlterField(
            model_name='service',
            name='min_price',
            field=models.DecimalField(decimal_places=2, help_text='Minimum price for the service', max_digits=16, validators=[django.core.validators.MinValueValidator(0.01)]),
        ),
        migrations.AlterField(
            model_name='service',
            name='name',
            field=models.CharField(help_text='Name of the service', max_length=255),
        ),
        migrations.AlterField(
            model_name='service',
            name='provider',
            field=models.ForeignKey(help_text='Service provider offering this service', on_delete=django.db.models.deletion.CASCADE, related_name='services', to='provider_app.serviceprovider'),
        ),
        migrations.AlterField(
            model_name='servicerequest',
            name='category',
            field=models.CharField(choices=[('Electrical', 'Electrical'), ('Automobile', 'Automobile'), ('Carpentry', 'Carpentry'), ('Cleaning', 'Cleaning'), ('Plumbing', 'Plumbing'), ('Fumigation', 'Fumigation'), ('Legal', 'Legal'), ('Healthcare', 'Healthcare'), ('Fashion', 'Fashion'), ('Shopping', 'Shopping'), ('Construction', 'Construction'), ('Fitness', 'Fitness'), ('Engineering', 'Engineering'), ('Education', 'Education'), ('Others', 'Others')], help_text='Category of the requested service', max_length=100),
        ),
        migrations.AlterField(
            model_name='servicerequest',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, help_text='When the service request was created'),
        ),
        migrations.AlterField(
            model_name='servicerequest',
            name='description',
            field=models.TextField(help_text='Detailed description of the service request'),
        ),
        migrations.AlterField(
            model_name='servicerequest',
            name='image',
            field=models.URLField(blank=True, help_text='URL to an image for the request (optional)', null=True),
        ),
        migrations.AlterField(
            model_name='servicerequest',
            name='price',
            field=models.DecimalField(decimal_places=2, help_text='Budget for the service request', max_digits=16, validators=[django.core.validators.MinValueValidator(0.01)]),
        ),
        migrations.AlterField(
            model_name='servicerequest',
            name='status',
            field=models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('awarded', 'Awarded')], default='pending', help_text='Current status of the request', max_length=20),
        ),
        migrations.AlterField(
            model_name='servicerequest',
            name='title',
            field=models.CharField(help_text='Title of the service request', max_length=255),
        ),
        migrations.AlterField(
            model_name='servicerequest',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, help_text='When the service request was last updated'),
        ),
        migrations.AlterField(
            model_name='servicerequest',
            name='user',
            field=models.ForeignKey(help_text='User who made the service request', on_delete=django.db.models.deletion.CASCADE, related_name='service_requests', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='servicerequestbid',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, help_text='When the bid was created'),
        ),
        migrations.AlterField(
            model_name='servicerequestbid',
            name='service_request',
            field=models.ForeignKey(help_text='Service request being bid on', on_delete=django.db.models.deletion.CASCADE, related_name='bids', to='service_app.servicerequest'),
        ),
        migrations.AlterField(
            model_name='servicerequestbid',
            name='status',
            field=models.CharField(choices=[('pending', 'Pending'), ('accepted', 'Accepted'), ('rejected', 'Rejected'), ('withdrawn', 'Withdrawn')], default='pending', help_text='Current status of the bid', max_length=20),
        ),
        migrations.AlterField(
            model_name='subservice',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, help_text='When the sub-service was created'),
        ),
        migrations.AlterField(
            model_name='subservice',
            name='description',
            field=models.TextField(help_text='Detailed description of the sub-service'),
        ),
        migrations.AlterField(
            model_name='subservice',
            name='image',
            field=models.URLField(blank=True, help_text='URL to an image representing the sub-service', null=True),
        ),
        migrations.AlterField(
            model_name='subservice',
            name='is_active',
            field=models.BooleanField(default=True, help_text='Whether the sub-service is currently active'),
        ),
        migrations.AlterField(
            model_name='subservice',
            name='name',
            field=models.CharField(help_text='Name of the sub-service', max_length=255),
        ),
        migrations.AlterField(
            model_name='subservice',
            name='price',
            field=models.DecimalField(decimal_places=2, help_text='Price for the sub-service', max_digits=16, validators=[django.core.validators.MinValueValidator(0.01)]),
        ),
        migrations.AlterField(
            model_name='subservice',
            name='service',
            field=models.ForeignKey(help_text='Main service this sub-service belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='sub_services', to='service_app.service'),
        ),
        migrations.AddIndex(
            model_name='booking',
            index=models.Index(fields=['user', '-created_at'], name='service_app_user_id_310845_idx'),
        ),
        migrations.AddIndex(
            model_name='booking',
            index=models.Index(fields=['provider', 'status'], name='service_app_provide_a2ebfb_idx'),
        ),
        migrations.AddIndex(
            model_name='booking',
            index=models.Index(fields=['service', 'booking_date'], name='service_app_service_4574ba_idx'),
        ),
        migrations.AddIndex(
            model_name='booking',
            index=models.Index(fields=['status'], name='service_app_status_ae5a35_idx'),
        ),
        migrations.AddIndex(
            model_name='service',
            index=models.Index(fields=['provider', '-created_at'], name='service_app_provide_1c5860_idx'),
        ),
        migrations.AddIndex(
            model_name='service',
            index=models.Index(fields=['category', 'is_active'], name='service_app_categor_1149f8_idx'),
        ),
        migrations.AddIndex(
            model_name='service',
            index=models.Index(fields=['min_price', 'max_price'], name='service_app_min_pri_b85bd7_idx'),
        ),
        migrations.AddIndex(
            model_name='servicerequest',
            index=models.Index(fields=['user', '-created_at'], name='service_app_user_id_664eb9_idx'),
        ),
        migrations.AddIndex(
            model_name='servicerequest',
            index=models.Index(fields=['category', 'status'], name='service_app_categor_5919b9_idx'),
        ),
        migrations.AddIndex(
            model_name='servicerequest',
            index=models.Index(fields=['price'], name='service_app_price_c4e148_idx'),
        ),
        migrations.AddIndex(
            model_name='servicerequestbid',
            index=models.Index(fields=['service_request', '-created_at'], name='service_app_service_38aff7_idx'),
        ),
        migrations.AddIndex(
            model_name='servicerequestbid',
            index=models.Index(fields=['provider', 'status'], name='service_app_provide_dcfde6_idx'),
        ),
        migrations.AddIndex(
            model_name='servicerequestbid',
            index=models.Index(fields=['amount'], name='service_app_amount_eb3bc0_idx'),
        ),
        migrations.AddIndex(
            model_name='subservice',
            index=models.Index(fields=['service', '-created_at'], name='service_app_service_65a50b_idx'),
        ),
        migrations.AddIndex(
            model_name='subservice',
            index=models.Index(fields=['is_active'], name='service_app_is_acti_ef17fc_idx'),
        ),
        migrations.AddIndex(
            model_name='subservice',
            index=models.Index(fields=['price'], name='service_app_price_ae1aa3_idx'),
        ),
    ]
